# Production Configuration for YCS LMS
# Optimized for high performance, scalability, and reliability

spring:
  profiles:
    active: production
    include:
      - backup
      - monitoring
      - security
  
  # Application Configuration
  application:
    name: ycs-lms
    version: 1.0.0

  # Database Configuration - Production MySQL
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/ycs_lms?useSSL=true&requireSSL=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8}
    username: ${DB_USERNAME:ycs_user}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
    
    # HikariCP Configuration - Optimized for production
    hikari:
      pool-name: YCS-HikariPool
      maximum-pool-size: 50
      minimum-idle: 10
      idle-timeout: 300000      # 5 minutes
      max-lifetime: 1800000     # 30 minutes
      connection-timeout: 30000 # 30 seconds
      validation-timeout: 5000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      auto-commit: false
      
    # Connection pool metrics
    metrics:
      enabled: true
      export:
        prometheus:
          enabled: true

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        # Performance optimizations
        jdbc:
          batch_size: 50
          fetch_size: 50
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        generate_statistics: false
        format_sql: false
        use_sql_comments: false
        
        # Second-level cache
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        
        # Connection handling
        connection:
          provider_disables_autocommit: true
        
        # Query optimization
        query:
          plan_cache_max_size: 2048
          plan_parameter_metadata_max_size: 128

  # Transaction Configuration
  transaction:
    default-timeout: 30
    rollback-on-commit-failure: true

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      write-durations-as-timestamps: false
    deserialization:
      adjust-dates-to-context-timezone: false
    default-property-inclusion: NON_NULL
    time-zone: Asia/Seoul

  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour
      cache-null-values: false
      key-prefix: "ycs-lms:"
      use-key-prefix: true

  # Redis Configuration
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 0
    timeout: 2000ms
    
    # Connection pool
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: -1ms
      shutdown-timeout: 100ms

  # Mail Configuration
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USER:}
    password: ${SMTP_PASS:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            trust: ${SMTP_HOST:smtp.gmail.com}
          connectiontimeout: 10000
          timeout: 10000
          writetimeout: 10000

  # Task Scheduling
  task:
    execution:
      pool:
        core-size: 8
        max-size: 16
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: ycs-async-
    scheduling:
      pool:
        size: 8
      thread-name-prefix: ycs-scheduler-

  # Session Configuration
  session:
    store-type: redis
    timeout: 86400s  # 24 hours
    redis:
      flush-mode: on_save
      namespace: "ycs-lms:session"
      cleanup-cron: "0 * * * * *"  # Every hour

# Server Configuration
server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /api
    session:
      timeout: 86400s
      cookie:
        name: YCS-SESSIONID
        secure: true
        http-only: true
        same-site: lax
        max-age: 86400s
  
  # HTTP/2 Support
  http2:
    enabled: true
  
  # Compression
  compression:
    enabled: true
    mime-types:
      - text/html
      - text/plain
      - text/css
      - application/javascript
      - application/json
      - application/xml
    min-response-size: 1024
  
  # Tomcat Configuration
  tomcat:
    threads:
      max: 200
      min-spare: 20
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20s
    keep-alive-timeout: 60s
    max-keep-alive-requests: 100
    
    # Access logs
    accesslog:
      enabled: true
      directory: /app/logs
      file-date-format: .yyyy-MM-dd
      pattern: '%h %l %u %t "%r" %s %b %D %{User-Agent}i'
      prefix: access_log
      suffix: .log
      
  # SSL Configuration (when using HTTPS)
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEYSTORE:}
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-store-type: PKCS12
    
  # Error handling
  error:
    whitelabel:
      enabled: false
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# Security Configuration
security:
  oauth2:
    resource:
      jwt:
        key-value: ${JWT_SECRET:}
        
# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: 
          - health
          - info
          - metrics
          - prometheus
          - loggers
          - configprops
          - env
          - beans
      base-path: /actuator
      cors:
        allowed-origins: "*"
        allowed-methods: "GET,POST"
    
  endpoint:
    health:
      show-details: when_authorized
      roles: ADMIN
      group:
        liveness:
          include: ping,db
        readiness:
          include: ping,db,redis
    metrics:
      enabled: true
    prometheus:
      enabled: true
    info:
      enabled: true
      
  # Health indicators
  health:
    redis:
      enabled: true
    db:
      enabled: true
    mail:
      enabled: true
    diskspace:
      enabled: true
      path: /app
      threshold: 1GB
      
  # Metrics configuration
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
        step: 10s
        descriptions: true
        pushgateway:
          enabled: false
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.75, 0.95, 0.99
      slo:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms
    web:
      server:
        request:
          autotime:
            enabled: true
            percentiles: 0.5, 0.75, 0.95, 0.99

  # Info endpoint
  info:
    git:
      mode: full
    build:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.ycs.lms: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN
    com.zaxxer.hikari: INFO
    org.apache.http: INFO
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
    
  file:
    name: /app/logs/ycs-lms.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 10GB
    
  logback:
    rollingpolicy:
      file-name-pattern: /app/logs/ycs-lms-%d{yyyy-MM-dd}-%i.log.gz
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 10GB

# Custom Application Configuration
ycs:
  # Application settings
  app:
    name: "YCS LMS"
    version: "1.0.0"
    description: "YCS Logistics Management System - Production"
    timezone: "Asia/Seoul"
    
  # Business rules
  business:
    cbm:
      threshold: 29.0
      auto-convert: true
    thb:
      threshold: 1500.0
      require-extra-recipient: true
    member-code:
      required: false
      delay-warning: true
      
  # File upload settings
  upload:
    max-file-size: 10MB
    max-request-size: 50MB
    temp-directory: /tmp/ycs-uploads
    allowed-extensions: 
      - jpg
      - jpeg
      - png
      - pdf
      - doc
      - docx
      - xls
      - xlsx
      
  # Email templates
  email:
    from: "YCS LMS <noreply@ycs.com>"
    templates:
      welcome: "classpath:templates/email/welcome.html"
      approval: "classpath:templates/email/approval.html"
      rejection: "classpath:templates/email/rejection.html"
      
  # External API configuration
  external:
    ems:
      api-url: "https://epost.go.kr/api"
      api-key: ${EMS_API_KEY:}
      timeout: 10s
      retry-attempts: 3
      
    hs:
      api-url: "https://openapi.customs.go.kr"
      api-key: ${HS_API_KEY:}
      timeout: 10s
      retry-attempts: 3
      
  # Rate limiting
  rate-limit:
    enabled: true
    requests-per-minute: 1000
    requests-per-hour: 10000
    
  # CORS Configuration
  cors:
    allowed-origins: 
      - ${FRONTEND_URL:http://localhost:3003}
      - ${ADMIN_PANEL_URL:http://localhost:3000}
    allowed-methods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
    allowed-headers:
      - Authorization
      - Content-Type
      - Accept
      - Origin
      - X-Requested-With
    allow-credentials: true
    max-age: 3600

# Backup Configuration (included from backup profile)
backup:
  database:
    enabled: true
    schedule: "0 2 * * *"  # Daily at 2 AM
    retention-days: 30
    compression: true
    encryption: true
    
  files:
    enabled: true
    schedule: "0 3 * * *"  # Daily at 3 AM
    retention-days: 90
    
  monitoring:
    enabled: true
    slack-webhook: ${BACKUP_SLACK_WEBHOOK:}
    email-recipients: ${BACKUP_EMAIL_RECIPIENTS:admin@ycs.com}

# Feature Flags
feature:
  flags:
    new-ui: ${FEATURE_NEW_UI:false}
    advanced-analytics: ${FEATURE_ANALYTICS:true}
    mobile-app-integration: ${FEATURE_MOBILE:true}
    third-party-integrations: ${FEATURE_INTEGRATIONS:true}