# Test Profile Configuration
spring:
  application:
    name: ycs-lms-test

  # H2 In-Memory Database for Testing
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    generate-unique-name: false

  h2:
    console:
      enabled: false  # 테스트에서는 비활성화

  # JPA Configuration for Testing
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop  # 테스트 시작시 생성, 종료시 삭제
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false  # 테스트에서는 SQL 로그 비활성화
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        generate_statistics: false
    defer-datasource-initialization: true

  # SQL Initialization - 테스트용 데이터
  sql:
    init:
      mode: never  # 테스트에서는 별도 초기화 불필요

  # Mail Configuration - Mock 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: test@example.com
    password: test-password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
    test-connection: false

# Server Configuration
server:
  port: 0  # 랜덤 포트 사용 (테스트 충돌 방지)

# JWT Configuration for Testing
jwt:
  secret: test-jwt-secret-key-for-testing-minimum-64-characters-required
  access-token-validity: 86400  # 24시간
  refresh-token-validity: 604800  # 7일

# Email Notification Settings - 테스트에서는 비활성화
app:
  notification:
    email:
      enabled: false  # 테스트에서는 이메일 전송 비활성화
      from: test@example.com
      from-name: "YSC Test"

# CORS 설정 - 테스트용
cors:
  allowed-origins:
    - http://localhost:3008
    - http://localhost:5173
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers:
    - Authorization
    - Content-Type
    - Accept
    - Origin
    - X-Requested-With
  allow-credentials: true
  max-age: 3600

# Logging - Test
logging:
  level:
    com.ysc.lms: INFO  # 테스트에서는 INFO 레벨
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.test: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"