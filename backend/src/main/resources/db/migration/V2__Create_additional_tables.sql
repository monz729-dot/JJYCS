-- V2__Create_additional_tables_h2.sql
-- H2 호환 버전 (orders, users 테이블이 먼저 존재해야 FK가 정상 생성됩니다)

-- 배송 추적
CREATE TABLE shipment_tracking (
                                   id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   order_id BIGINT NOT NULL,
                                   tracking_number VARCHAR(100) NOT NULL,
                                   carrier VARCHAR(100),
                                   service_type VARCHAR(50),

                                   status VARCHAR(20) DEFAULT 'pending'
                                       CHECK (status IN ('pending','in_transit','customs','out_for_delivery','delivered','failed')),
                                   current_location VARCHAR(200),

                                   shipped_at TIMESTAMP NULL,
                                   estimated_delivery TIMESTAMP NULL,
                                   actual_delivery TIMESTAMP NULL,

                                   tracking_events CLOB, -- JSON 텍스트 보관
                                   last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

                                   CONSTRAINT fk_shipment_tracking_order
                                       FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE
);

-- 결제
CREATE TABLE payments (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          order_id BIGINT NOT NULL,

                          payment_type VARCHAR(20) NOT NULL
                              CHECK (payment_type IN ('order','shipping','additional')),

                          amount DECIMAL(12,2) NOT NULL,
                          currency VARCHAR(3) NOT NULL,

                          payment_method VARCHAR(20) NOT NULL
                              CHECK (payment_method IN ('credit_card','bank_transfer','digital_wallet','cash')),
                          payment_status VARCHAR(20) DEFAULT 'pending'
                              CHECK (payment_status IN ('pending','completed','failed','refunded')),

                          payment_reference VARCHAR(200),
                          gateway_transaction_id VARCHAR(200),

                          paid_at TIMESTAMP NULL,
                          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                          updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

                          CONSTRAINT fk_payments_order
                              FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE
);

-- 견적
CREATE TABLE estimates (
                           id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           order_id BIGINT NOT NULL,
                           estimate_version INT DEFAULT 1,
                           estimate_type VARCHAR(20) DEFAULT 'preliminary'
                               CHECK (estimate_type IN ('preliminary','final')),

                           base_shipping_cost DECIMAL(12,2) DEFAULT 0.00,
                           local_delivery_cost DECIMAL(12,2) DEFAULT 0.00,
                           repack_cost DECIMAL(12,2) DEFAULT 0.00,
                           insurance_cost DECIMAL(12,2) DEFAULT 0.00,
                           customs_fee DECIMAL(12,2) DEFAULT 0.00,
                           handling_fee DECIMAL(12,2) DEFAULT 0.00,

                           subtotal DECIMAL(12,2)
                               AS (base_shipping_cost + local_delivery_cost + repack_cost + insurance_cost + customs_fee + handling_fee),
                           tax_amount DECIMAL(12,2) DEFAULT 0.00,
                           total_amount DECIMAL(12,2)
                               AS (base_shipping_cost + local_delivery_cost + repack_cost + insurance_cost + customs_fee + handling_fee + tax_amount),
                           currency VARCHAR(3) DEFAULT 'THB',

                           valid_until DATE,
                           estimated_delivery_days INT,
                           notes CLOB,

                           status VARCHAR(20) DEFAULT 'draft'
                               CHECK (status IN ('draft','sent','accepted','rejected','expired')),
                           created_by BIGINT,
                           approved_by BIGINT,

                           created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                           updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

                           CONSTRAINT fk_estimates_order      FOREIGN KEY (order_id)     REFERENCES orders(id) ON DELETE CASCADE,
                           CONSTRAINT fk_estimates_created_by FOREIGN KEY (created_by)   REFERENCES users(id),
                           CONSTRAINT fk_estimates_approved_by FOREIGN KEY (approved_by) REFERENCES users(id)
);

-- 파트너 추천
CREATE TABLE partner_referrals (
                                   id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   partner_user_id BIGINT NOT NULL,
                                   referred_user_id BIGINT NOT NULL,
                                   referral_code VARCHAR(20) NOT NULL,

                                   referred_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                   first_order_id BIGINT,
                                   first_order_at TIMESTAMP NULL,

                                   commission_rate DECIMAL(5,2),
                                   commission_amount DECIMAL(12,2) DEFAULT 0.00,
                                   commission_currency VARCHAR(3) DEFAULT 'THB',
                                   commission_status VARCHAR(20) DEFAULT 'pending'
                                       CHECK (commission_status IN ('pending','earned','paid')),
                                   commission_paid_at TIMESTAMP NULL,

                                   CONSTRAINT fk_partner_referrals_partner   FOREIGN KEY (partner_user_id)  REFERENCES users(id) ON DELETE CASCADE,
                                   CONSTRAINT fk_partner_referrals_referred  FOREIGN KEY (referred_user_id) REFERENCES users(id) ON DELETE CASCADE,
                                   CONSTRAINT fk_partner_referrals_first_ord FOREIGN KEY (first_order_id)   REFERENCES orders(id)
);

-- 시스템 설정
CREATE TABLE config (
                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        config_key VARCHAR(100) NOT NULL UNIQUE,
                        config_value CLOB NOT NULL, -- JSON/문자 등 모두 텍스트로 저장
                        config_type VARCHAR(10) DEFAULT 'string'
                            CHECK (config_type IN ('string','number','boolean','json')),
                        description CLOB,

                        is_system BOOLEAN DEFAULT FALSE,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        updated_by BIGINT,

                        CONSTRAINT fk_config_updated_by FOREIGN KEY (updated_by) REFERENCES users(id)
);

-- 감사 로그
CREATE TABLE audit_logs (
                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            entity_type VARCHAR(50) NOT NULL,
                            entity_id VARCHAR(50) NOT NULL,
                            action VARCHAR(10) NOT NULL
                                CHECK (action IN ('CREATE','UPDATE','DELETE','VIEW','APPROVE','REJECT')),

    user_id BIGINT,
    user_email VARCHAR(255),
    user_role VARCHAR(50),

    old_values CLOB,
    new_values CLOB,
    changed_fields CLOB,

    ip_address VARCHAR(45),
    user_agent CLOB,
    request_id VARCHAR(100),

    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT fk_audit_logs_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL
);

-- 알림
CREATE TABLE notifications (
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               user_id BIGINT NOT NULL,
                               type VARCHAR(50) NOT NULL,
                               title VARCHAR(200) NOT NULL,
                               message CLOB NOT NULL,

                               related_entity_type VARCHAR(50),
                               related_entity_id BIGINT,

                               status VARCHAR(20) DEFAULT 'unread'
                                   CHECK (status IN ('unread','read','archived')),
                               priority VARCHAR(10) DEFAULT 'normal'
                                   CHECK (priority IN ('low','normal','high','urgent')),

                               send_email BOOLEAN DEFAULT FALSE,
                               send_sms BOOLEAN DEFAULT FALSE,
                               email_sent_at TIMESTAMP NULL,
                               sms_sent_at TIMESTAMP NULL,

                               read_at TIMESTAMP NULL,
                               created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

                               CONSTRAINT fk_notifications_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- 파일 첨부
CREATE TABLE file_attachments (
                                  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  entity_type VARCHAR(50) NOT NULL,
                                  entity_id BIGINT NOT NULL,
                                  file_type VARCHAR(20) NOT NULL
                                      CHECK (file_type IN ('document','image','label','invoice','other')),

                                  original_name VARCHAR(500) NOT NULL,
                                  stored_name VARCHAR(500) NOT NULL,
                                  file_path VARCHAR(1000) NOT NULL,
                                  file_size BIGINT NOT NULL,
                                  mime_type VARCHAR(200),

                                  uploaded_by BIGINT,
                                  upload_ip VARCHAR(45),

                                  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

                                  CONSTRAINT fk_file_attachments_uploaded_by FOREIGN KEY (uploaded_by) REFERENCES users(id) ON DELETE SET NULL
);

-- 인덱스
CREATE INDEX idx_shipment_tracking_order_id   ON shipment_tracking(order_id);
CREATE INDEX idx_shipment_tracking_number     ON shipment_tracking(tracking_number);
CREATE INDEX idx_shipment_tracking_status     ON shipment_tracking(status);

CREATE INDEX idx_payments_order_id            ON payments(order_id);
CREATE INDEX idx_payments_status              ON payments(payment_status);
CREATE INDEX idx_payments_reference           ON payments(payment_reference);

CREATE INDEX idx_estimates_order_id           ON estimates(order_id);
CREATE INDEX idx_estimates_status             ON estimates(status);
CREATE INDEX idx_estimates_version            ON estimates(order_id, estimate_version);

CREATE INDEX idx_partner_referrals_partner_id  ON partner_referrals(partner_user_id);
CREATE INDEX idx_partner_referrals_referred_id ON partner_referrals(referred_user_id);
CREATE INDEX idx_partner_referrals_code        ON partner_referrals(referral_code);

CREATE INDEX idx_config_key                   ON config(config_key);
CREATE INDEX idx_config_system                ON config(is_system);

CREATE INDEX idx_audit_logs_entity            ON audit_logs(entity_type, entity_id);
CREATE INDEX idx_audit_logs_user_id           ON audit_logs(user_id);
CREATE INDEX idx_audit_logs_action            ON audit_logs(action);
CREATE INDEX idx_audit_logs_created_at        ON audit_logs(created_at);

CREATE INDEX idx_notifications_user_id        ON notifications(user_id);
CREATE INDEX idx_notifications_status         ON notifications(status);
CREATE INDEX idx_notifications_type           ON notifications(type);
CREATE INDEX idx_notifications_created_at     ON notifications(created_at);

CREATE INDEX idx_file_attachments_entity      ON file_attachments(entity_type, entity_id);
CREATE INDEX idx_file_attachments_type        ON file_attachments(file_type);
CREATE INDEX idx_file_attachments_uploaded_by ON file_attachments(uploaded_by);

-- 초기 설정 데이터
INSERT INTO config (config_key, config_value, config_type, description, is_system) VALUES
                                                                                       ('cbm_threshold', '29.0', 'number', 'CBM 임계값 (m³) - 초과시 항공배송 자동 전환', TRUE),
                                                                                       ('thb_amount_threshold', '1500.0', 'number', 'THB 금액 임계값 - 초과시 수취인 추가 정보 필요', TRUE),
                                                                                       ('auto_air_conversion', 'true', 'boolean', 'CBM 초과시 자동 항공 전환 여부', TRUE),
                                                                                       ('require_member_code', 'true', 'boolean', '회원 코드 필수 여부', TRUE),
                                                                                       ('default_currency', 'THB', 'string', '기본 통화', FALSE),
                                                                                       ('max_file_size_mb', '10', 'number', '최대 파일 크기 (MB)', FALSE),
                                                                                       ('allowed_file_types', '["jpg","jpeg","png","pdf","doc","docx"]', 'json', '허용 파일 형식', FALSE),
                                                                                       ('email_notification_enabled', 'true', 'boolean', '이메일 알림 활성화', FALSE),
                                                                                       ('sms_notification_enabled', 'false', 'boolean', 'SMS 알림 활성화', FALSE);

INSERT INTO config (config_key, config_value, config_type, description, is_system) VALUES
                                                                                       ('notification_template_order_created', '주문이 생성되었습니다. 주문번호: {orderCode}', 'string', '주문 생성 알림 템플릿', TRUE),
                                                                                       ('notification_template_order_confirmed', '주문이 확인되었습니다. 주문번호: {orderCode}', 'string', '주문 확인 알림 템플릿', TRUE),
                                                                                       ('notification_template_order_shipped', '주문이 발송되었습니다. 추적번호: {trackingNumber}', 'string', '주문 발송 알림 템플릿', TRUE),
                                                                                       ('notification_template_cbm_exceeded', 'CBM이 {cbm}m³로 임계값을 초과하여 항공배송으로 전환되었습니다.', 'string', 'CBM 초과 알림 템플릿', TRUE),
                                                                                       ('notification_template_amount_exceeded', 'THB 금액이 {amount}로 임계값을 초과합니다. 수취인 추가 정보를 입력해주세요.', 'string', '금액 초과 알림 템플릿', TRUE);
