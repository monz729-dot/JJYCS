<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ycs.lms.mapper.ScanEventMapper">

    <!-- Result Maps -->
    <resultMap id="scanEventResultMap" type="com.ycs.lms.entity.ScanEvent">
        <id property="id" column="id"/>
        <result property="labelCode" column="label_code"/>
        <result property="orderBoxId" column="order_box_id"/>
        <result property="orderId" column="order_id"/>
        <result property="scanType" column="scan_type"/>
        <result property="scannedBy" column="scanned_by"/>
        <result property="warehouseId" column="warehouse_id"/>
        <result property="location" column="location"/>
        <result property="status" column="status"/>
        <result property="notes" column="notes"/>
        <result property="scanTime" column="scan_time"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- SQL Fragments -->
    <sql id="scanEventColumns">
        id, label_code, order_box_id, order_id, scan_type, scanned_by,
        warehouse_id, location, status, notes, scan_time, created_at, updated_at
    </sql>

    <sql id="whereConditions">
        <where>
            <if test="warehouseId != null">
                AND warehouse_id = #{warehouseId}
            </if>
            <if test="boxId != null">
                AND order_box_id = #{boxId}
            </if>
            <if test="eventType != null and eventType != ''">
                AND scan_type = #{eventType}
            </if>
            <if test="startDate != null and startDate != ''">
                AND scan_time >= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND scan_time <= #{endDate}
            </if>
            <if test="userId != null">
                AND scanned_by = #{userId}
            </if>
            <if test="labelCode != null and labelCode != ''">
                AND label_code LIKE CONCAT('%', #{labelCode}, '%')
            </if>
            <if test="orderCode != null and orderCode != ''">
                AND order_id IN (
                    SELECT id FROM orders WHERE order_code LIKE CONCAT('%', #{orderCode}, '%')
                )
            </if>
        </where>
    </sql>

    <!-- Insert Operations -->
    <insert id="insertScanEvent" parameterType="com.ycs.lms.entity.ScanEvent" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO scan_events (
            label_code, order_box_id, order_id, scan_type, scanned_by,
            warehouse_id, location, status, notes, scan_time, created_at, updated_at
        ) VALUES (
            #{labelCode}, #{orderBoxId}, #{orderId}, #{scanType}, #{scannedBy},
            #{warehouseId}, #{location}, #{status}, #{notes}, 
            COALESCE(#{scanTime}, NOW()), COALESCE(#{createdAt}, NOW()), COALESCE(#{updatedAt}, NOW())
        )
    </insert>

    <insert id="insertScanEvents" parameterType="list">
        INSERT INTO scan_events (
            label_code, order_box_id, order_id, scan_type, scanned_by,
            warehouse_id, location, status, notes, scan_time, created_at, updated_at
        ) VALUES
        <foreach collection="list" item="item" separator=",">
        (
            #{item.labelCode}, #{item.orderBoxId}, #{item.orderId}, #{item.scanType}, #{item.scannedBy},
            #{item.warehouseId}, #{item.location}, #{item.status}, #{item.notes}, 
            COALESCE(#{item.scanTime}, NOW()), COALESCE(#{item.createdAt}, NOW()), COALESCE(#{item.updatedAt}, NOW())
        )
        </foreach>
    </insert>

    <!-- Select Operations -->
    <select id="findById" parameterType="long" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE id = #{id}
    </select>

    <select id="findScanEventsWithFilter" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events
        <include refid="whereConditions"/>
        ORDER BY scan_time DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countScanEventsWithFilter" resultType="long">
        SELECT COUNT(*)
        FROM scan_events
        <include refid="whereConditions"/>
    </select>

    <select id="findByLabelCode" parameterType="string" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE label_code = #{labelCode}
        ORDER BY scan_time DESC
    </select>

    <select id="findByOrderId" parameterType="long" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE order_id = #{orderId}
        ORDER BY scan_time DESC
    </select>

    <select id="findByOrderBoxId" parameterType="long" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE order_box_id = #{orderBoxId}
        ORDER BY scan_time DESC
    </select>

    <select id="findByWarehouseId" parameterType="long" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE warehouse_id = #{warehouseId}
        ORDER BY scan_time DESC
    </select>

    <select id="findByUserId" parameterType="long" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE scanned_by = #{userId}
        ORDER BY scan_time DESC
    </select>

    <select id="findByScanType" parameterType="string" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE scan_type = #{scanType}
        ORDER BY scan_time DESC
    </select>

    <select id="findByStatus" parameterType="string" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE status = #{status}
        ORDER BY scan_time DESC
    </select>

    <select id="findByWarehouseIdAndScanType" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE warehouse_id = #{warehouseId} AND scan_type = #{scanType}
        ORDER BY scan_time DESC
    </select>

    <select id="findByDateRange" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE scan_time BETWEEN #{startDate} AND #{endDate}
        ORDER BY scan_time DESC
    </select>

    <select id="findByWarehouseIdAndDateRange" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE warehouse_id = #{warehouseId} 
        AND scan_time BETWEEN #{startDate} AND #{endDate}
        ORDER BY scan_time DESC
    </select>

    <select id="findByUserIdAndDateRange" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE scanned_by = #{userId} 
        AND scan_time BETWEEN #{startDate} AND #{endDate}
        ORDER BY scan_time DESC
    </select>

    <select id="findRecentByWarehouseId" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE warehouse_id = #{warehouseId}
        ORDER BY scan_time DESC
        LIMIT #{limit}
    </select>

    <select id="findRecentByUserId" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE scanned_by = #{userId}
        ORDER BY scan_time DESC
        LIMIT #{limit}
    </select>

    <select id="findScanHistoryByLabelCode" parameterType="string" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE label_code = #{labelCode}
        ORDER BY scan_time ASC
    </select>

    <select id="findScanHistoryByOrderId" parameterType="long" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE order_id = #{orderId}
        ORDER BY scan_time ASC
    </select>

    <select id="findLastScanByLabelCode" parameterType="string" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE label_code = #{labelCode}
        ORDER BY scan_time DESC
        LIMIT 1
    </select>

    <select id="findLastScanByOrderBoxId" parameterType="long" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE order_box_id = #{orderBoxId}
        ORDER BY scan_time DESC
        LIMIT 1
    </select>

    <select id="findPendingScansByWarehouseId" parameterType="long" resultMap="scanEventResultMap">
        SELECT <include refid="scanEventColumns"/>
        FROM scan_events 
        WHERE warehouse_id = #{warehouseId} AND status = 'PENDING'
        ORDER BY scan_time DESC
    </select>

    <!-- Statistics and reporting -->
    <select id="countByWarehouseId" parameterType="long" resultType="long">
        SELECT COUNT(*) 
        FROM scan_events 
        WHERE warehouse_id = #{warehouseId}
    </select>

    <select id="countByWarehouseIdAndScanType" resultType="long">
        SELECT COUNT(*) 
        FROM scan_events 
        WHERE warehouse_id = #{warehouseId} AND scan_type = #{scanType}
    </select>

    <select id="countByUserIdAndDate" resultType="long">
        SELECT COUNT(*) 
        FROM scan_events 
        WHERE scanned_by = #{userId} AND DATE(scan_time) = DATE(#{date})
    </select>

    <select id="countByDateRange" resultType="long">
        SELECT COUNT(*) 
        FROM scan_events 
        WHERE scan_time BETWEEN #{startDate} AND #{endDate}
    </select>

    <!-- Update Operations -->
    <update id="updateScanEvent" parameterType="com.ycs.lms.entity.ScanEvent">
        UPDATE scan_events 
        SET 
            label_code = #{labelCode},
            order_box_id = #{orderBoxId},
            order_id = #{orderId},
            scan_type = #{scanType},
            scanned_by = #{scannedBy},
            warehouse_id = #{warehouseId},
            location = #{location},
            status = #{status},
            notes = #{notes},
            scan_time = #{scanTime},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateScanEventStatus">
        UPDATE scan_events 
        SET status = #{status}, updated_at = NOW() 
        WHERE id = #{id}
    </update>

    <update id="updateScanEventNotes">
        UPDATE scan_events 
        SET notes = #{notes}, updated_at = NOW() 
        WHERE id = #{id}
    </update>

    <!-- Delete Operations -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM scan_events WHERE id = #{id}
    </delete>

    <delete id="deleteByOrderId" parameterType="long">
        DELETE FROM scan_events WHERE order_id = #{orderId}
    </delete>

    <delete id="deleteByOrderBoxId" parameterType="long">
        DELETE FROM scan_events WHERE order_box_id = #{orderBoxId}
    </delete>

    <delete id="deleteOldScanEvents" parameterType="java.time.LocalDateTime">
        DELETE FROM scan_events WHERE created_at < #{cutoffDate}
    </delete>

</mapper>